test_name: Make sure server process job after authorization (1.0.0)

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: "{tavern.env_vars.GLOBAL_ASSET_ID}"
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 201
      headers:
        content-type: application/json
      save:
        json:
          job_id: jobId
    delay_after: 3

  - name: fetch response for created job
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs/{job_id}"
      params:
        returnUncompletedJob: true
      method: GET
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/json

---

test_name: Make sure job with submodels process with status COMPLETED

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: "{tavern.env_vars.GLOBAL_ASSET_ID}"
        collectAspects: true
        depth: 10
        direction: "downward"
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 201
      headers:
        content-type: application/json
      save:
        json:
          job_id: jobId
    delay_after: 300

  - name: fetch response for created job
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs/{job_id}"
      params:
        returnUncompletedJob: true
      method: GET
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 200
      json:
        job:
          jobState: COMPLETED
      verify_response_with:
        - function: api-tests.tavern_helpers:submodels_are_not_empty
      #        createdOn: #2022-10-10T05:33:23.114513694Z
      #        startedOn: #2022-10-10T05:33:23.114792093Z
      headers:
        content-type: application/json

---

test_name: Make sure job without submodels process with status COMPLETED

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: "{tavern.env_vars.GLOBAL_ASSET_ID}"
        collectAspects: false
        depth: 10
        direction: "downward"
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 201
      headers:
        content-type: application/json
      save:
        json:
          job_id: jobId
    delay_after: 300

  - name: fetch response for created job
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs/{job_id}"
      params:
        returnUncompletedJob: true
      method: GET
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 200
      json:
        job:
          jobState: COMPLETED
      verify_response_with:
        - function: api-tests.tavern_helpers:submodels_are_empty
      #        createdOn: #2022-10-10T05:33:23.114513694Z
      #        startedOn: #2022-10-10T05:33:23.114792093Z
      headers:
        content-type: application/json

---


test_name: Make sure job return 400-response for invalid globalAssetId syntax (1.1.0 + 1.1.1)

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and check errors in response
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: urn:uuid:4ad4a1ce-beb2-42d2-bfe7c6xyz009123452
        collectAspects: true
        depth: 10
        direction: "downward"
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 400
      json:
        statusCode: BAD_REQUEST
        message: Invalid Arguments.
        errors:
          - globalAssetId:size must be between 45 and 45
          - globalAssetId:must match "^urn:uuid:[0-9a-fA-F]{{8}}-[0-9a-fA-F]{{4}}-[0-9a-fA-F]{{4}}-[0-9a-fA-F]{{4}}-[0-9a-fA-F]{{12}}$"
      headers:
        content-type: application/json

---

test_name: Make sure job with depth and bomLifecycle is processed (1.2.0)

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: "{tavern.env_vars.GLOBAL_ASSET_ID}"
        bomLifecycle: "asBuilt"
        depth: 2
        collectAspects: true
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 201
      json:
        jobId: !re_fullmatch "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
      headers:
        content-type: application/json
      save:
        json:
          job_id: jobId
    delay_after: 240

  - name: fetch response for created job and check details
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs/{job_id}"
      params:
        returnUncompletedJob: true
      method: GET
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 200
      json:
        job:
          jobState: COMPLETED
      verify_response_with:
        - function: api-tests.tavern_helpers:tombstones_are_empty
        - function: api-tests.tavern_helpers:relationships_are_not_empty
        - function: api-tests.tavern_helpers:submodels_are_not_empty
      #        createdOn: #2022-10-10T05:33:23.114513694Z
      #        startedOn: #2022-10-10T05:33:23.114792093Z
      headers:
        content-type: application/json


---

test_name: Make sure job with aspect serialPartTypization is processed (1.3.0)

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: "{tavern.env_vars.GLOBAL_ASSET_ID}"
        aspects:
          - SerialPartTypization
        collectAspects: true
        depth: 10
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 201
      json:
        jobId: !re_fullmatch "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
      headers:
        content-type: application/json
      save:
        json:
          job_id: jobId
    delay_after: 240

  - name: fetch response for created job and check details
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs/{job_id}"
      params:
        returnUncompletedJob: true
      method: GET
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 200
      json:
        job:
          jobState: COMPLETED
      verify_response_with:
        - function: api-tests.tavern_helpers:tombstones_are_empty
        - function: api-tests.tavern_helpers:relationships_are_not_empty
        - function: api-tests.tavern_helpers:submodels_are_not_empty
      #        createdOn: #2022-10-10T05:33:23.114513694Z
      #        startedOn: #2022-10-10T05:33:23.114792093Z
      headers:
        content-type: application/json

---

test_name: Make sure job with aspects SerialPartTypization and AssemblyPartRelationship is processed (1.3.1)

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: "{tavern.env_vars.GLOBAL_ASSET_ID}"
        aspects:
          - SerialPartTypization
          - AssemblyPartRelationship
        collectAspects: true
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 201
      json:
        jobId: !re_fullmatch "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
      headers:
        content-type: application/json
      save:
        json:
          job_id: jobId
    delay_after: 240

  - name: fetch response for created job and check details
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs/{job_id}"
      params:
        returnUncompletedJob: true
      method: GET
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 200
      json:
        job:
          jobState: COMPLETED
      verify_response_with:
        - function: api-tests.tavern_helpers:tombstones_are_empty
        - function: api-tests.tavern_helpers:relationships_are_not_empty
        - function: api-tests.tavern_helpers:submodels_are_not_empty
      #        createdOn: #2022-10-10T05:33:23.114513694Z
      #        startedOn: #2022-10-10T05:33:23.114792093Z
      headers:
        content-type: application/json


---

test_name: Make sure job with aspects BatteryPass and MaterialForRecycling is processed (1.3.2)

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: "{tavern.env_vars.GLOBAL_ASSET_ID}"
        aspects:
          - BatteryPass
          - MaterialForRecycling
        collectAspects: true
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 201
      json:
        jobId: !re_fullmatch "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
      headers:
        content-type: application/json
      save:
        json:
          job_id: jobId
    delay_after: 240

  - name: fetch response for created job and check details
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs/{job_id}"
      params:
        returnUncompletedJob: true
      method: GET
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 200
      json:
        job:
          jobState: COMPLETED
      verify_response_with:
        - function: api-tests.tavern_helpers:tombstones_are_empty
        - function: api-tests.tavern_helpers:relationships_are_not_empty
        - function: api-tests.tavern_helpers:submodels_are_not_empty
      #        createdOn: #2022-10-10T05:33:23.114513694Z
      #        startedOn: #2022-10-10T05:33:23.114792093Z
      headers:
        content-type: application/json


---

test_name: Make sure job with aspects AddressAspect and ContactInformation is processed (1.3.3)

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: "{tavern.env_vars.GLOBAL_ASSET_ID}"
        aspects:
          - AddressAspect
          - ContactInformation
        collectAspects: true
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 201
      json:
        jobId: !re_fullmatch "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
      headers:
        content-type: application/json
      save:
        json:
          job_id: jobId
    delay_after: 240

  - name: fetch response for created job and check details
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs/{job_id}"
      params:
        returnUncompletedJob: true
      method: GET
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 200
      json:
        job:
          jobState: COMPLETED
      verify_response_with:
        - function: api-tests.tavern_helpers:tombstones_are_empty
        - function: api-tests.tavern_helpers:relationships_are_not_empty
        - function: api-tests.tavern_helpers:submodels_are_not_empty
      #        createdOn: #2022-10-10T05:33:23.114513694Z
      #        startedOn: #2022-10-10T05:33:23.114792093Z
      headers:
        content-type: application/json


---

test_name: Make sure job with aspects SerialPartTypization and ContactInformation is processed (1.3.4)

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: "{tavern.env_vars.GLOBAL_ASSET_ID}"
        aspects:
          - SerialPartTypization
          - ContactInformation
        collectAspects: true
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 201
      json:
        jobId: !re_fullmatch "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
      headers:
        content-type: application/json
      save:
        json:
          job_id: jobId
    delay_after: 240

  - name: fetch response for created job and check details
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs/{job_id}"
      params:
        returnUncompletedJob: true
      method: GET
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 200
      json:
        job:
          jobState: COMPLETED
      verify_response_with:
        - function: api-tests.tavern_helpers:tombstones_are_empty
        - function: api-tests.tavern_helpers:relationships_are_not_empty
        - function: api-tests.tavern_helpers:submodels_are_not_empty
      #        createdOn: #2022-10-10T05:33:23.114513694Z
      #        startedOn: #2022-10-10T05:33:23.114792093Z
      headers:
        content-type: application/json


---

test_name: Make sure job with invalid aspects is giving the correct error message (1.4.1)

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: "{tavern.env_vars.GLOBAL_ASSET_ID}"
        aspects:
          - UnknownAspect
        collectAspects: true
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 400
      json:
        statusCode: BAD_REQUEST
        message: "NoSuchElementException: Unsupported AspectType: UnknownAspect. Must be one of: SerialPartTypization, AssemblyPartRelationship, Batch, ProductDescription, IdConversion, MarketplaceOffer, MaterialForRecycling, PhysicalDimension, ReturnRequest, CertificateOfDestruction, CertificateOfDismantler, EndOfLife, PcfCore, PcfSupplyRelation, PcfTechnical, AddressAspect, ContactInformation, BatteryPass, VehicleDiagnosticDataQuality"
        errors: null
      headers:
        content-type: application/json

---

test_name: Make sure job with all valid aspects is processed (1.5.0)

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: "{tavern.env_vars.GLOBAL_ASSET_ID}"
        aspects:
          - SerialPartTypization
          - AssemblyPartRelationship
          - Batch
          - ProductDescription
          - IdConversion
          - MarketplaceOffer
          - MaterialForRecycling
          - PhysicalDimension
          - ReturnRequest
          - CertificateOfDestruction
          - CertificateOfDismantler
          - EndOfLife
          - EsrCertificate
          - EsrCertificateStateStatistic
          - ChargingProcess
          - AddressAspect
          - ClaimData
          - BatteryPass
          - DiagnosticData
          - MaterialForHomologation
          - PartAsPlanned
        collectAspects: true
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 201
      json:
        jobId: !re_fullmatch "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
      headers:
        content-type: application/json
      save:
        json:
          job_id: jobId
    delay_after: 240

  - name: fetch response for created job and check details
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs/{job_id}"
      params:
        returnUncompletedJob: true
      method: GET
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 200
      json:
        job:
          jobState: COMPLETED
      verify_response_with:
        - function: api-tests.tavern_helpers:tombstones_are_empty
        - function: api-tests.tavern_helpers:relationships_are_not_empty
        - function: api-tests.tavern_helpers:submodels_are_not_empty
      #        createdOn: #2022-10-10T05:33:23.114513694Z
      #        startedOn: #2022-10-10T05:33:23.114792093Z
      headers:
        content-type: application/json


---

test_name: Make sure job with DEPRECATED Catena-X semantichub aspect is processed as expected

strict:
  - headers:off
  - json:off

marks:
  - parametrize:
      key:
        deprecated_aspect
      vals:
#        - AssemblyPartRelationship
#        - IdConversion
#        - MarketplaceOffer
#        - MaterialForRecycling
#        - PhysicalDimension
#        - ReturnRequest
#        - EndOfLife
##        - SerialPartTypization
#        - ProductDescription
        - EoLStory
#        - Material
        - PcfCore
        - PcfSupplyRelation
        - PcfTechnical

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: "{tavern.env_vars.GLOBAL_ASSET_ID}"
        aspects:
          - "{deprecated_aspect}"
        collectAspects: true
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 400
      json:
        statusCode: BAD_REQUEST
        message: "NoSuchElementException: Unsupported AspectType: {deprecated_aspect}. Must be one of: SerialPartTypization, AssemblyPartRelationship, Batch, ProductDescription, IdConversion, MarketplaceOffer, MaterialForRecycling, PhysicalDimension, ReturnRequest, CertificateOfDestruction, CertificateOfDismantler, EndOfLife, PcfCore, PcfSupplyRelation, PcfTechnical, AddressAspect, ContactInformation, BatteryPass, VehicleDiagnosticDataQuality"
        errors: null
      headers:
        content-type: application/json