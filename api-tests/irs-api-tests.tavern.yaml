test_name: Make sure server process job after authorization

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: urn:uuid:4ad4a1ce-beb2-42d2-bfe7-d5d9c68d6daf
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 201
      headers:
        content-type: application/json
      save:
        json:
          job_id: jobId
    delay_after: 3

  - name: fetch response for created job
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs/{job_id}"
      params:
        returnUncompletedJob: true
      method: GET
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/json

#---
#
#test_name: Make sure job return 400-response for invalid globalAssetId syntax (1.1.0 + 1.1.1)
#
#strict:
#  - headers:off
#  - json:off
#
#stages:
#  - name: authenticate and fetch access token
#    request:
#      url: "{tavern.env_vars.KEYCLOAK_HOST}"
#      method: POST
#      data:
#        grant_type: client_credentials
#        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
#        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
#    response:
#      status_code: 200
#      json:
#        token_type: Bearer
#      headers:
#        content-type: application/json
#      save:
#        json:
#          access_token: access_token
#
#  - name: create a job and check errors in response
#    request:
#      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
#      json:
#        globalAssetId: urn:uuid:4ad4a1ce-beb2-42d2-bfe7c6xyz00912345
#      method: POST
#      headers:
#        content-type: application/json
#        Authorization: "Bearer {access_token:s}"
#    response:
#      status_code: 400
#      json:
#        statusCode: BAD_REQUEST
#        message: Invalid Arguments
#        errors: "globalAssetId:must match \"^urn:uuid:[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$\""
#       # body:  #not sure if this one work because of array with two elements
#        #  errors:
#         # - "globalAssetId:size must be between 45 and 45"
#          #- "globalAssetId:must match \"^urn:uuid:[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$\""
#      headers:
#        content-type: application/json

---

test_name: Make sure job with depth and bomLifecycle is processed (1.2.0)

strict:
  - headers:off
  - json:off

stages:
  - name: authenticate and fetch access token
    request:
      url: "{tavern.env_vars.KEYCLOAK_HOST}"
      method: POST
      data:
        grant_type: client_credentials
        client_id: "{tavern.env_vars.KEYCLOAK_CLIENT_ID}"
        client_secret: "{tavern.env_vars.KEYCLOAK_CLIENT_SECRET}"
    response:
      status_code: 200
      json:
        token_type: Bearer
      headers:
        content-type: application/json
      save:
        json:
          access_token: access_token

  - name: create a job and wait
    request:
      url: "{tavern.env_vars.IRS_HOST}/irs/jobs"
      json:
        globalAssetId: urn:uuid:4ad4a1ce-beb2-42d2-bfe7-d5d9c68d6daf
        bomLifecycle: "asBuilt"
        depth: 2
        collectAspects: true
      method: POST
      headers:
        content-type: application/json
        Authorization: "Bearer {access_token:s}"
    response:
      status_code: 201
      json:
        jobId: !re_fullmatch "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
      headers:
        content-type: application/json
      save:
        json:
          job_id: jobId 2
      delay_after: 3

#  - name: fetch response for created job and check details
#    request:
#      url: "{tavern.env_vars.IRS_HOST}/irs/jobs/{job_id}"
#      params:
#        returnUncompletedJob: true
#      method: GET
#      headers:
#        content-type: application/json
#        Authorization: "Bearer {access_token:s}"
#    response:
#      status_code: 200
##      json:
##        tombstones: #array
##        submodels: #array
##        relationships: #array
##        createdOn: #2022-10-10T05:33:23.114513694Z
##        startedOn: #2022-10-10T05:33:23.114792093Z
#      headers:
#        content-type: application/json