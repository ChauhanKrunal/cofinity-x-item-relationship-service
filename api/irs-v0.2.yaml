openapi: 3.0.1
info:
  description: API to retrieve parts tree information. See <a href="https://confluence.catena-x.net/display/CXM/PRS+Environments+and+Test+Data">this
    page</a> for more information on test data available in this environment.
  title: IRS API
  version: "0.2"
servers:
  - url: https://Specification/api/v0.2
paths:
  /irs/items/{globalAssetId}:
    post:
      description: "Registers and starts a AAS crawler job for given {globalAssetId}"
      operationId: getBomLifecycleByGlobalAssetId
      parameters:
        - description: Readable ID of manufacturer including plant.
          example: urn:uuid:6c311d29-5753-46d4-b32c-19b918ea93b0
          in: path
          name: globalAssetId
          required: true
          schema:
            type: string
            maxLength: 45
            minLength: 45
            pattern: "urn:uuid:^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
        - description: "Unique identifier of a single, unique (sub)component/part/batch,\
          \  given by its globalAssetId/ digital twin id."
          example: asBuilt
          in: query
          name: bomLifecycle
          required: true
          schema:
            type: string
            description: View defining which data of the PartsTree is retrieved.
            enum:
              - asBuild
              - asMaintained
              - asPlanned
              - asDesigned
              - asOrdered
              - asRecycled
        - description: AspectType information to add to the returned tree
          example: SerialPartTypization
          explode: false
          in: query
          name: aspects
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - SerialPartTypization
                - AssemblyPartRelationship
                - PartDimension
                - SupplyRelationData
                - PCFCoreData
                - PCFTechnicalData
                - MarketPlaceOffer
                - MaterialAspect
                - BatteryPass
                - ProductDescriptionVehicle
                - ProductDescriptionBattery
                - ReturnRequest
                - CertificateOfDestruction
                - CertificateOfDismantler
                - Address
                - Contact
              default: SerialPartTypization
        - description: "Max depth of the returned tree, if empty max depth is returned"
          in: query
          name: depth
          required: false
          schema:
            type: integer
            format: int32
            maximum: 100
            minimum: 1
            default: 1
        - description: Direction in which the tree shall be traversed
          example: downward
          in: query
          name: direction
          required: false
          schema:
            type: string
            description: Direction in which the tree shall be traversed
            enum:
              - upward
              - downward
            default: downward
      responses:
        "200":
          description: job id response for successful job registration
          content:
            application/json:
              examples:
                complete:
                  $ref: '#/components/examples/job-handle'
        "400":
          description: Bad request
          content:
            application/json:
              examples:
                complete:
                  $ref: '#/components/schemas/ErrorResponse'

      summary: Get a BOM tree for a given item
      tags:
        - Item Relationship Service
  /irs/jobs/{jobId}:
    get:
      operationId: getBOMForJobId
      parameters:
        - description: "Id of the job in processing."
          in: path
          name: jobId
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
        - description: "If true, the endpoint returns the uncompleted results of the bom tree."
          in: query
          name: returnUncompletedResultTree
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          # complete job result with bom tree:
          description: livecycle tree representation with the starting point of the given jobId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jobs'
              examples:
                complete:
                  $ref: '#/components/examples/complete-job-result'
        "201":
          description: job details for given jobId - job is in running state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jobs'
              examples:
                complete:
                  $ref: '#/components/examples/job-result-without-uncompleted-result-tree'
        "206":
          description: uncompleted livecycle tree representation with the starting point of the given jobId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jobs'
              examples:
                complete:
                  $ref: '#/components/examples/partial-job-result'
        "404":
          description: processing of job was canceled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jobs'
              examples:
                complete:
                  $ref: '#/components/examples/canceled-job-result'
        "417":
          description: Processing of job failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jobs'
              example:
                complete:
                  $ref: '#/components/examples/failed-job-result'
      summary: Get a BOM partial or complete for a given jobId.
      tags:
        - Item Relationship Service
  /irs/jobs/{processingState}:
    get:
      operationId: getJobsByProcessingState
      parameters:
        - description: List of jobs (globalAssetIds) for a certain processing state
          in: path
          name: processingState
          required: true
          schema:
            type: string
            format: enum
            enum:
              - running
              - failed
              - complete
              - canceled
              # queued
              # waiting
            default: running
      responses:
        "200":
          description: list of jobs with given processingState
          content:
            application/json:
              examples:
                complete:
                  $ref: '#/components/examples/complete-job-list-processing-state'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      tags:
        - Item Relationship Service
  /irs/jobs/{jobId}/cancel:
    put:
      operationId: cancelJobForJobId
      parameters:
        - description: "Id of the job in registry."
          in: path
          name: jobId
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        '200':
          description: Job with {jobId} was canceled
        '400':
          description: Bad request. JobId must be a string in UUID format.
        '401':
          description: Authorization information is missing or invalid.
        '404':
          description: A job with the specified jobId was not found.
        '500':
          description: Unexpected error.
      summary: Cancel job execution for a given jobId.
      tags:
        - Item Relationship Service
components:
  schemas:
    Jobs:
      type: object
      description: Container for a job its relationship and shells.
      properties:
        job:
          $ref: '#/components/schemas/Job'
        relationships:
          type: array
          description: Collection of relationships mapping the parent child relationship of AssemblyPartRelationShip aspects
          items:
            $ref: '#/components/schemas/Relationship'
        shells:
          type: array
          description: Collections of AAS shells
          items:
            $ref: '#/components/schemas/Shell'
    Job:
      type: object
      description: Link between two parts.
      properties:
        jobID:
          type: string
          items:
            $ref: '#/components/schemas/UUID'
        globalAssetId:
          type: string
          items:
            $ref: '#/components/schemas/CatenaXId'
        jobStatus:
          type: string
          description: Error code
          enum:
            - running
            - failed
            - complete
            - canceled
        createdOn:
          type: string
          format: date-time
        lastModifiedOn:
          type: string
          format: date-time
        jobFinished:
          type: string
          format: date-time
        requestURL:
          type: string
          format: url
        action:
          type: string
          description: HTTP verbs used by request
          enum:
            - GET
            - POST
            - PUT
            - DELETE
            - PATCH
        owner:
          type: string
          description: The requestor of the request
        summary:
          type: object
          description: List of asyncFetchedItems
          items:
            $ref: '#/components/schemas/AsyncFetchedItems'
        queryParameter:
          type: object
          description: Query parameters of current request
          properties:
            bomLifecycle:
              type: object
              items:
                $ref: '#/components/schemas/BomLifecycle'
            aspects:
              type: array
              items:
                $ref: '#/components/schemas/Aspect'
            depth:
              type: integer
              description: Max depth of the returned tree, if empty max depth is returned
              minimum: 0
              maximum: 100
              default: 1
            direction:
              type: string
              description: Direction in which the tree shall be traversed
              default: downward
              enum:
                - upward
                - downward
        exception:
          type: object
          description: Exception state for this job
          properties:
            exception:
              type: string
              minimum: 0
              maximum: 100
            errorDetail:
              type: string
              minimum: 0
              maximum: 4000
            exceptionDate:
              type: string
              format: date-time
    BomLifecycle:
      type: string
      description: The bill of material lifecycle for an asset
      enum:
        - asBuilt # BoM AsBuilt describes a product as manufactured.
        - asMaintained # BoM AsMaintained describes the BoM after purchase by a customer and updates through maintenace.
        - asPlanned # BoM asPlanned is used to plan the manufacturing process including alternative parts.
        - asDesigned # BoM asDesigned is generated in the design phase of a new product including alternative parts.
        - asOrdered # BoM AsOrdered is used for manufacturing realization.
        - asRecycled # BoM AsRecycled describes the BoM after the recycling of the product.
      default: asBuilt
    Description:
      type: object
      properties:
        language:
          type: string
          minimum: 0
          maximum: 3
        text:
          type: string
          minimum: 0
          maximum: 4000
    Aspect:
      type: string
      description: Aspect models containing information of OEMs
      enum:
        - SerialPartTypization
        - AssemblyPartRelationship
        - PartDimension
        - SupplyRelationData
        - PCFCoreData
        - PCFTechnicalData
        - MarketPlaceOffer
        - MaterialAspect
        - BatteryPass
        - ProducDescription.Vehicle
        - ProducDescription.Battery
        - ReturnRequest
        - CertificateOfDestruction
        - CertificateOfDismantler
        - Address
        - Contact
    AsyncFetchedItems:
      type: object
      properties:
        queued:
          type: integer
          description: Number of 'queued' submodel requests
        running:
          type: integer
          description: Number of 'running' submodel requests
        complete:
          type: integer
          description: Number of 'completed' submodel requests
        failed:
          type: integer
          description: Number of 'failed' submodel requests
        lost:
          type: integer
          description: Number of 'lost' submodel requests
    Relationship:
      type: object
      description: Relationship of a parent child relationship between items on different levels as defined in aspect AssemblyPartRelationship.
      properties:
        catenaXId:
          $ref: '#/components/schemas/CatenaXId'
        childItem:
          type: array
          items:
            $ref: '#/components/schemas/ChildItem'
    Shell:
      type: object
      description: An AAS shell
      properties:
        description:
          type: array
          items:
            $ref: '#/components/schemas/Description'
        globalAssetId:
          type: object
          properties:
            value:
              type: array
              items:
                $ref: '#/components/schemas/CatenaXId'
        idShort:
          type: string
        identification:
          type: string
        specificAssetIds:
          type: array
          items:
            $ref: '#/components/schemas/SpecificAssetId'
        submodelDescriptors:
          type: object
          properties:
            description:
              type: array
              items:
                $ref: '#/components/schemas/Description'
            idShort:
              type: string
            identification:
              type: string
            specificAssetIds:
              type: array
              items:
                $ref: '#/components/schemas/SpecificAssetId'
            endpoints:
              type: array
              items:
                $ref: '#/components/schemas/Endpoint'
    Endpoint:
      type: object
      properties:
        interface:
          type: string
          default: HTTP
        protocolInformation:
          type: object
          properties:
            endpointAddress:
              type: string
              format: url
            endpointProtocol:
              type: string
            endpointProtocolVersion:
              type: string
    SpecificAssetId:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ChildItem:
      type: object
      properties:
        quantity:
          type: object
          items:
            $ref: '#/components/schemas/Quantity'
        lifecycleContext:
          type: object
          items:
            $ref: '#/components/schemas/BomLifecycle'
        assembledOn:
          type: string
          format: date-time
        lastModifiedOn:
          type: string
          format: date-time
        childCatenaXId:
          type: string
          items:
            $ref: '#/components/schemas/CatenaXId'
    Quantity:
      type: object
      properties:
        quantityNumber:
          type: object
          items:
            $ref: '#/components/schemas/MeasurementUnit'
    MeasurementUnit:
      type: object
      properties:
        datatypeURI:
          type: string
          format: urn
        lexicalValue:
          type: string
    CatenaXId:
      type: string
      maxLength: 25
      minLength: 25
      format: urn
      pattern: urn:uuid:^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      example: urn:uuid:6c311d29-5753-46d4-b32c-19b918ea93b0 # Random Example
    UUID:
      type: string
      maxLength: 36
      minLength: 36
      format: uuid
      example: 6c311d29-5753-46d4-b32c-19b918ea93b0 # Random Example
    ErrorResponse:
      type: object
      description: Error response
      properties:
        errors:
          type: array
          description: List of errors
          items:
            type: string
            description: List of errors
        message:
          type: string
          description: Error message
        statusCode:
          type: string
          description: Error code
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
  examples:
    job-handle:
      value:
        {"jobId": "6c311d29-5753-46d4-b32c-19b918ea93b0"}
    complete-job-list-processing-state:
      value:
        {
          "jobs": [ "6c311d29-5753-46d4-b32c-19b918ea93b0","46cd8fb1-34c1-4426-9c16-84b913bcfd95"]
        }
    failed-job-result:
      value:
        {
          "job": {
            "jobId": "e5347c88-a921-11ec-b909-0242ac120002",
            "globalAssetId": "6c311d29-5753-46d4-b32c-19b918ea93b0",
            "jobStatus": "Failed",
            "createdOn": "2022-02-03T14:48:54.709Z",
            "startedOn": "2022-02-03T14:48:54.709Z",
            "lastModifiedOn": "2022-02-03T14:48:54.709Z",
            "jobCompleted": "",
            "requestURL": "https://api.server.test/api/../",
            "owner": "",
            "summary": {
              "asyncFetchedItems": {
                "queued": 0,
                "running": 0,
                "complete": 0,
                "failed": 1,
                "lost": 0
              } },
            "queryParameter": {
              "bomLifecycle": "asBuilt",
              "aspects" : ["SerialPartTypization", "Contact"],
              "depth": 4,
              "direction": "downward"
            },
            "exception": {
              "exception": "IrsTimeoutException",
              "errorDetail": "Timeout while requesting Digital Registry.",
              "exceptionDate": "2022-02-03T14:48:54.709Z"
            }
          }
        }
    partial-job-result:
      value:
        {
          "job": {
            "jobId": "e5347c88-a921-11ec-b909-0242ac120002",
            "globalAssetId": "6c311d29-5753-46d4-b32c-19b918ea93b0",
            "jobStatus": "InProgress",
            "createdOn": "2022-02-03T14:48:54.709Z",
            "startedOn": "2022-02-03T14:48:54.709Z",
            "lastModifiedOn": "2022-02-03T14:48:54.709Z",
            "jobCompleted": "2022-02-03T14:48:54.709Z",
            "requestURL": "https://api.server.test/api/../",
            "owner": "",
            "summary": {
              "asyncFetchedItems": {
                "queued": 0,
                "running": 0,
                "complete": 0,
                "failed": 0,
                "lost": 0
              } },
            "queryParameter": {
              "bomLifecycle": "asBuilt",
              "aspects": "SerialPartTypization",
              "depth": 4,
              "direction": "downward"
            },
            "exception": {
              "exception": "IrsTimeoutException",
              "errorDetail": "Timeout while requesting Digital Registry.",
              "exceptionDate": "2022-02-03T14:48:54.709Z"
            }
          }
        }
    job-result-without-uncompleted-result-tree:
      value:
        {
          "job": {
            "jobId": "e5347c88-a921-11ec-b909-0242ac120002",
            "globalAssetId": "6c311d29-5753-46d4-b32c-19b918ea93b0",
            "jobStatus": "InProgress",
            "createdOn": "2022-02-03T14:48:54.709Z",
            "startedOn": "2022-02-03T14:48:54.709Z",
            "lastModifiedOn": "2022-02-03T14:48:54.709Z",
            "jobCompleted": "2022-02-03T14:48:54.709Z",
            "requestURL": "https://api.server.test/api/../",
            "owner": "",
            "summary": {
              "asyncFetchedItems": {
                "queued": 0,
                "running": 0,
                "complete": 0,
                "failed": 0,
                "lost": 0
              } },
            "queryParameter": {
              "bomLifecycle": "asBuilt",
              "aspects" : ["SerialPartTypization", "Contact"],
              "depth": 4,
              "direction": "downward"
            },
            "exception": {
              "exception": "IrsTimeoutException",
              "errorDetail": "Timeout while requesting Digital Registry.",
              "exceptionDate": "2022-02-03T14:48:54.709Z"
            }
          },
          "relationships": [
            {
              "catenaXId": "urn:uuid:d9bec1c6-e47c-4d18-ba41-0a5fe8b7f447",
              "childItem": {
                "quantity": {
                  "quantityNumber": 1,
                  "measurementUnit": {
                    "datatypeURI": "urn:bamm:io.openmanufacturing:meta-model:1.0.0#piece",
                    "lexicalValue": "piece"
                  }
                },
                "lifecycleContext": "asBuilt",
                "assembledOn": "2022-02-03T14:48:54.709Z",
                "lastModifiedOn": "2022-02-03T14:48:54.709Z",
                "childCatenaXId": "a45a2246-f6e1-42da-b47d-5c3b58ed62e9"
              }
            }
          ],
          "shells": [
            {
              "description": [
                {
                  "language": "en",
                  "text": "The shell for a vehicle"
                }
              ],
              "globalAssetId": {
                "value": [
                    "a45a2246-f6e1-42da-b47d-5c3b58ed62e9"
                ]
              },
              "idShort": "future concept x",
              "identification": "882fc530-b69b-4707-95f6-5dbc5e9baaa8",
              "specificAssetIds": [
                {
                  "key": "engineserialid",
                  "value": "12309481209312"
                }
              ],
              "submodelDescriptors": [
                {
                  "description": [
                    {
                      "language": "en",
                      "text": "Provides base vehicle information"
                    }
                  ],
                  "idShort": "vehicle base details",
                  "identification": "4a738a24-b7d8-4989-9cd6-387772f40565",
                  "semanticId": {
                    "value": [
                        "urn:bamm:com.catenax.vehicle:0.1.1"
                    ]
                  },
                  "endpoints": [
                    {
                      "interface": "HTTP",
                      "protocolInformation": {
                        "endpointAddress": "https://catena-x.net/vehicle/basedetails/",
                        "endpointProtocol": "HTTPS",
                        "endpointProtocolVersion": "1.0"
                      }
                    }
                  ]
                },
                {
                  "description": [
                    {
                      "language": "en",
                      "text": "Provides base vehicle information"
                    }
                  ],
                  "idShort": "vehicle part details",
                  "identification": "dae4d249-6d66-4818-b576-bf52f3b9ae90",
                  "semanticId": {
                    "value": [
                        "urn:bamm:com.catenax.vehicle:0.1.1#PartDetails"
                    ]
                  },
                  "endpoints": [
                    {
                      "interface": "HTTP",
                      "protocolInformation": {
                        "endpointAddress": "https://catena-x.net/vehicle/partdetails/",
                        "endpointProtocol": "HTTPS",
                        "endpointProtocolVersion": "1.0"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
    canceled-job-result:
      value:
        {
          "job": {
            "jobId": "e5347c88-a921-11ec-b909-0242ac120002",
            "globalAssetId": "6c311d29-5753-46d4-b32c-19b918ea93b0",
            "jobStatus": "Canceled",
            "createdOn": "2022-02-03T14:48:54.709Z",
            "startedOn": "2022-02-03T14:48:54.709Z",
            "lastModifiedOn": "2022-02-03T14:48:54.709Z",
            "jobCompleted": "2022-02-03T14:48:54.709Z",
            "requestURL": "https://api.server.test/api/../",
            "owner": "",
            "summary": {
              "asyncFetchedItems": {
                "queued": 0,
                "running": 0,
                "complete": 0,
                "failed": 0,
                "lost": 0
              } },
            "queryParameter": {
              "bomLifecycle": "asBuilt",
              "aspects" : ["SerialPartTypization", "Contact"],
              "depth": 4,
              "direction": "downward"
            },
            "exception": {
              "exception": "IrsTimeoutException",
              "errorDetail": "Timeout while requesting Digital Registry.",
              "exceptionDate": "2022-02-03T14:48:54.709Z"
            }
          }
        }
    complete-job-result:
      value:
        {
          "job": {
            "jobId": "e5347c88-a921-11ec-b909-0242ac120002",
            "globalAssetId": "6c311d29-5753-46d4-b32c-19b918ea93b0",
            "jobStatus": "Completed",
            "createdOn": "2022-02-03T14:48:54.709Z",
            "startedOn": "2022-02-03T14:48:54.709Z",
            "lastModifiedOn": "2022-02-03T14:48:54.709Z",
            "jobCompleted": "2022-02-03T14:48:54.709Z",
            "requestURL": "https://api.server.test/api/../",
            "owner": "",
            "summary": {
              "asyncFetchedItems": {
                "queued": 0,
                "running": 0,
                "complete": 0,
                "failed": 0,
                "lost": 0
              } },
            "queryParameter": {
              "bomLifecycle": "asBuilt",
              "aspects" : ["SerialPartTypization", "Contact"],
              "depth": 4,
              "direction": "downward"
            },
            "exception": {
              "exception": "IrsTimeoutException",
              "errorDetail": "Timeout while requesting Digital Registry.",
              "exceptionDate": "2022-02-03T14:48:54.709Z"
            }
          },
          "relationships": [
            {
              "catenaXId": "d9bec1c6-e47c-4d18-ba41-0a5fe8b7f447",
              "childItem": {
                "quantity": {
                  "quantityNumber": 1,
                  "measurementUnit": {
                    "datatypeURI": "urn:bamm:io.openmanufacturing:meta-model:1.0.0#piece",
                    "lexicalValue": "piece"
                  }
                },
                "lifecycleContext": "asBuilt",
                "assembledOn": "2022-02-03T14:48:54.709Z",
                "lastModifiedOn": "2022-02-03T14:48:54.709Z",
                "childCatenaXId": "a45a2246-f6e1-42da-b47d-5c3b58ed62e9"
              }
            }
          ],
          "shells": [
            {
              "description": [
                {
                  "language": "en",
                  "text": "The shell for a vehicle"
                }
              ],
              "globalAssetId": {
                "value": [
                    "a45a2246-f6e1-42da-b47d-5c3b58ed62e9"
                ]
              },
              "idShort": "future concept x",
              "identification": "882fc530-b69b-4707-95f6-5dbc5e9baaa8",
              "specificAssetIds": [
                {
                  "key": "engineserialid",
                  "value": "12309481209312"
                }
              ],
              "submodelDescriptors": [
                {
                  "description": [
                    {
                      "language": "en",
                      "text": "Provides base vehicle information"
                    }
                  ],
                  "idShort": "vehicle base details",
                  "identification": "4a738a24-b7d8-4989-9cd6-387772f40565",
                  "semanticId": {
                    "value": [
                        "urn:bamm:com.catenax.vehicle:0.1.1"
                    ]
                  },
                  "endpoints": [
                    {
                      "interface": "HTTP",
                      "protocolInformation": {
                        "endpointAddress": "https://catena-x.net/vehicle/basedetails/",
                        "endpointProtocol": "HTTPS",
                        "endpointProtocolVersion": "1.0"
                      }
                    }
                  ]
                },
                {
                  "description": [
                    {
                      "language": "en",
                      "text": "Provides base vehicle information"
                    }
                  ],
                  "idShort": "vehicle part details",
                  "identification": "dae4d249-6d66-4818-b576-bf52f3b9ae90",
                  "semanticId": {
                    "value": [
                        "urn:bamm:com.catenax.vehicle:0.1.1#PartDetails"
                    ]
                  },
                  "endpoints": [
                    {
                      "interface": "HTTP",
                      "protocolInformation": {
                        "endpointAddress": "https://catena-x.net/vehicle/partdetails/",
                        "endpointProtocol": "HTTPS",
                        "endpointProtocolVersion": "1.0"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }

