@startuml

autonumber "<b>[000]"

Activate IRSSystem
IRSSystem ->> IrsAASCrawler: executeJob(aasID,depth,bom,submodelType)
Activate IrsAASCrawler
database Blobstore
note left
     GET /irs/item/{globalAssetId}/{bomLifecycle}?submodelType
end note
ref over IrsAASCrawler,IRSClient,AASAdapter,AASRegistry
  lookupAASIdentifier in AASRegistry
end ref

IrsAASCrawler <-- IRSClient: AAS Descriptor

opt AASDescriptor.isNull || Exception
   IrsAASCrawler -> Blobstore: Update Job status (error)
end opt
IrsAASCrawler ->> IrsAASCrawler ++ : (continue) ? true
 note right
   Recursion
   Repeat until
   AssemblyPartRelationshipAspect
   hasChildren() == false ||
   depth=currentTreeDepth
end note

IrsAASCrawler -> IrsAASCrawler: Extract submodels (Level 1) from AAS Descriptor
IrsAASCrawler -> Blobstore: Update Job status
IrsAASCrawler -> IrsAASCrawler: FiltersubmodelsFromAAS(WhiteListFilter)
note left
     Filter for submodels:
     Whitelist: (isAssemblyPartRelation()
     & submodels.contains(submodelType))
     CollectionOfFilteredSubmodels
end note

loop forEach(CollectionOfFilteredSubmodels)
    opt {submodelType}.contains(submodel.submodelType)
    IrsAASCrawler -> Blobstore: Persist AAS Shell with filtered submodels
      note left
            Persist AssemblyPartRelationship
            BAMMModel
            in database
      end note
    IrsAASCrawler -> Blobstore: Update Job status
    end opt

    opt submodel.submodelType.isaAssemblyPartRelationship


          IrsAASCrawler -> IRSClient: GET {endpoint}/submodel)
             IRSClient -> AASAdapter: GET {endpoint}/submodel)
             AASAdapter -> AspectServerOEM: GET {endpoint}/submodel)
             AASAdapter <-- AspectServerOEM: submodel payload
             IRSClient <-- AASAdapter: submodel payload
             IrsAASCrawler <-- IRSClient: submodel payload
             opt AASDescriptor.isNull || Exception
                 IrsAASCrawler -> Blobstore: Update Job status (error)
             end opt

             IrsAASCrawler -> IrsAASCrawler: Extract ChildIDs from AssemblyPartRelationship
             note left
                AssemblyPartRelationship
                Extract ChildIDs of
                by semanticId (Level 1)
                Collection of catenaXChildIds
                TODO: Clarify Identifier Type !!!
             end note


             loop forEach(childIds)
               note right
                     Instead of loop the api
                     could accept a batch of ids
                end note

             ref over IrsAASCrawler,IRSClient,AASAdapter,AASRegistry
                  lookupAASIdentifier in AASRegistry
             end ref
            IrsAASCrawler <-- IRSClient: AAS Descriptor

             note left #FFAAAA
                   Recursion -> [004]
                end note
             end loop
    end
end
@enduml